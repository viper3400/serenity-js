"use strict";(self.webpackChunk_documentation_serenity_js_org=self.webpackChunk_documentation_serenity_js_org||[]).push([[55009],{30876:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>d});var r=n(2784);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=c(n),h=a,d=u["".concat(p,".").concat(h)]||u[h]||m[h]||o;return n?r.createElement(d,i(i({ref:t},l),{},{components:n})):r.createElement(d,i({ref:t},l))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=h;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[u]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},18076:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>y,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=n(7896),a=(n(2784),n(30876));const o={sidebar_position:3},i="Mocha",s={unversionedId:"test-runners/mocha",id:"test-runners/mocha",title:"Mocha",description:"Mocha.js is a universal test runner providing a number of useful features,",source:"@site/docs/test-runners/mocha.mdx",sourceDirName:"test-runners",slug:"/test-runners/mocha",permalink:"/handbook/test-runners/mocha",draft:!1,editUrl:"https://github.com/serenity-js/serenity-js/tree/main/documentation/serenity-js.org/docs/test-runners/mocha.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Jasmine",permalink:"/handbook/test-runners/jasmine"},next:{title:"Playwright Test",permalink:"/handbook/test-runners/playwright-test"}},p={},c=[{value:"Examples and Project Templates",id:"examples-and-project-templates",level:2},{value:"Using Serenity/JS reporting services",id:"using-serenityjs-reporting-services",level:2},{value:"Installing Serenity/JS test runner adapter",id:"installing-serenityjs-test-runner-adapter",level:3},{value:"Configuring Serenity/JS",id:"configuring-serenityjs",level:3},{value:"Configuring Mocha",id:"configuring-mocha",level:3},{value:"Defining Mocha test scenarios",id:"defining-mocha-test-scenarios",level:3},{value:"Using Serenity/JS Screenplay Pattern APIs",id:"using-serenityjs-screenplay-pattern-apis",level:2},{value:"Configuring a cast of actors",id:"configuring-a-cast-of-actors",level:3},{value:"Referring to actors in test scenarios",id:"referring-to-actors-in-test-scenarios",level:3}],l=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",t)},u=l("Tabs"),m=l("TabItem"),h={toc:c},d="wrapper";function y(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"mocha"},"Mocha"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://mochajs.org/"},"Mocha.js")," is a universal test runner providing a number of useful features,\nsuch as ",(0,a.kt)("a",{parentName:"p",href:"/api/mocha-adapter/interface/MochaConfig"},"automatic retry of failed tests"),".\nIf your project already uses Mocha to run its unit tests, you can use the same runner for your acceptance tests too."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"You will learn:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"how to use ",(0,a.kt)("a",{parentName:"li",href:"/handbook/reporting/"},"Serenity/JS reporting services"),", including the ",(0,a.kt)("a",{parentName:"li",href:"/handbook/reporting/serenity-bdd-reporter"},"Serenity BDD reporter"),", even if your test scenarios don't follow the Screenplay Pattern yet"),(0,a.kt)("li",{parentName:"ul"},"how to implement Mocha test scenarios using reusable ",(0,a.kt)("a",{parentName:"li",href:"/handbook/design/screenplay-pattern"},"Serenity/JS Screenplay Pattern")," APIs")),(0,a.kt)("h2",{id:"examples-and-project-templates"},"Examples and Project Templates"),(0,a.kt)("p",null,"If you'd like to dive straight into the code, ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/serenity-js"},"Serenity/JS GitHub repository")," provides:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/serenity-js?q=mocha+template&type=all&language=&sort="},"Serenity/JS + Mocha project templates"),", which are the easiest way to start with the framework,"),(0,a.kt)("li",{parentName:"ul"},"several ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/serenity-js/serenity-js/tree/main/examples"},"reference implementations"),", demonstrating using Serenity/JS with Mocha to write both REST API- and web-based acceptance tests")),(0,a.kt)("h2",{id:"using-serenityjs-reporting-services"},"Using Serenity/JS reporting services"),(0,a.kt)("p",null,"To use ",(0,a.kt)("a",{parentName:"p",href:"/handbook/reporting/"},"Serenity/JS reporting services")," in a Mocha project, you need to:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"attach the ",(0,a.kt)("a",{parentName:"li",href:"/api/mocha"},(0,a.kt)("inlineCode",{parentName:"a"},"@serenity-js/mocha"))," test runner adapter to Mocha"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/api/core/function/configure"},"configure Serenity/JS")," to use the reporting services you want to use,\nsuch as the ",(0,a.kt)("a",{parentName:"li",href:"/handbook/reporting/console-reporter"},(0,a.kt)("inlineCode",{parentName:"a"},"ConsoleReporter")),"\nor ",(0,a.kt)("a",{parentName:"li",href:"/handbook/reporting/serenity-bdd-reporter"},(0,a.kt)("inlineCode",{parentName:"a"},"SerenityBDDReporter")))),(0,a.kt)("admonition",{title:"Serenity/JS test runner adapters",type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"Serenity/JS test runner adapters turn internal, test runner-specific events\ninto ",(0,a.kt)("a",{parentName:"p",href:"/handbook/reporting/domain-events"},"Serenity/JS domain events")," that can contribute to test execution reports produced\nby ",(0,a.kt)("a",{parentName:"p",href:"/handbook/reporting/"},"Serenity/JS reporting services"),".")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/api/mocha"},(0,a.kt)("inlineCode",{parentName:"a"},"@serenity-js/mocha")," module")," provides a ",(0,a.kt)("a",{parentName:"p",href:"/handbook/about/architecture"},(0,a.kt)("strong",{parentName:"a"},"test runner adapter")),"\nyou can attach to your Mocha test runner."),(0,a.kt)("p",null,"Integration architecture described in this section applies to invoking\n",(0,a.kt)("inlineCode",{parentName:"p"},"mocha")," command line interface directly, for example for ",(0,a.kt)("strong",{parentName:"p"},"domain-level"),",\n",(0,a.kt)("a",{parentName:"p",href:"/handbook/api-testing/"},(0,a.kt)("strong",{parentName:"a"},"REST/HTTP API-level")),", or ",(0,a.kt)("a",{parentName:"p",href:"/handbook/web-testing/"},(0,a.kt)("strong",{parentName:"a"},"web-based testing")),"\nusing ",(0,a.kt)("a",{parentName:"p",href:"/api/playwright"},"Playwright"),"."),(0,a.kt)("p",null,"If you want your Mocha scenarios to interact with ",(0,a.kt)("strong",{parentName:"p"},"web interfaces")," using ",(0,a.kt)("a",{parentName:"p",href:"https://www.selenium.dev/documentation/webdriver/"},"Selenium Webdriver protocol"),",\nor connect them to a ",(0,a.kt)("a",{parentName:"p",href:"https://www.selenium.dev/documentation/grid/"},"Selenium Grid"),",\nyou should do so via ",(0,a.kt)("a",{parentName:"p",href:"/handbook/test-runners/protractor"},"Protractor"),"\nor ",(0,a.kt)("a",{parentName:"p",href:"/handbook/test-runners/webdriverio"},"WebdriverIO")," instead."),(0,a.kt)("figure",null,(0,a.kt)("mermaid",{value:'graph TB\n    DEV(["\ud83d\udcbb Developer"])\n    TR(["mocha"])\n    SC(["@serenity-js/core"])\n    TRA(["@serenity-js/mocha"])\n    CF["config.ts"]\n    R(["Serenity/JS reporting services"])\n    DEV -- invokes --\x3e TR\n    TR -- loads --\x3e CF\n    TR -- notifies --\x3e TRA\n    TRA -- notifies --\x3e SC\n    CF -- configures --\x3e SC\n    SC -- notifies --\x3e R\n\n    click R "/handbook/reporting"\n    click SC "/api/core"\n    click TRA "/api/mocha"'}),(0,a.kt)("figcaption",null,"Serenity/JS + Mocha integration architecture")),(0,a.kt)("h3",{id:"installing-serenityjs-test-runner-adapter"},"Installing Serenity/JS test runner adapter"),(0,a.kt)("p",null,"Assuming you already have a ",(0,a.kt)("a",{parentName:"p",href:"/handbook/about/installation#creating-a-nodejs-project"},"Node.js project"),"\nand ",(0,a.kt)("a",{parentName:"p",href:"/handbook/about/installation"},"Serenity/JS runtime dependencies")," set up,\nadd the following Node modules:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/api/core"},(0,a.kt)("inlineCode",{parentName:"a"},"@serenity-js/core"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/api/mocha"},(0,a.kt)("inlineCode",{parentName:"a"},"@serenity-js/mocha"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/mocha"},(0,a.kt)("inlineCode",{parentName:"a"},"mocha")))),(0,a.kt)("p",null,"To do that, run the following command in your terminal:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"npm install --save-dev @serenity-js/{core,mocha} mocha\n")),(0,a.kt)("p",null,"If you'd like to implement your test suite in TypeScript, also run:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"npm install --save-dev typescript ts-node @types/{mocha,node}\n")),(0,a.kt)("h3",{id:"configuring-serenityjs"},"Configuring Serenity/JS"),(0,a.kt)("p",null,"If you intend to run your Mocha scenarios using the ",(0,a.kt)("a",{parentName:"p",href:"https://mochajs.org/#command-line-usage"},"Mocha CLI"),",\nthe best way to configure Serenity/JS is to invoke the Serenity/JS ",(0,a.kt)("a",{parentName:"p",href:"/api/core/function/configure"},(0,a.kt)("inlineCode",{parentName:"a"},"configure"))," function\nin a ",(0,a.kt)("a",{parentName:"p",href:"https://mochajs.org/#available-root-hooks"},(0,a.kt)("inlineCode",{parentName:"a"},"beforeAll")," hook"),",\ndefined in a Mocha support file ",(0,a.kt)("a",{parentName:"p",href:"https://mochajs.org/#-require-module-r-module"},(0,a.kt)("inlineCode",{parentName:"a"},"required")," upon test execution"),":"),(0,a.kt)(u,{mdxType:"Tabs"},(0,a.kt)(m,{value:"typescript",label:"TypeScript project",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="spec/support/serenity.config.ts"',title:'"spec/support/serenity.config.ts"'},"import 'mocha'\n\nimport { configure } from '@serenity-js/core'\n\nbeforeAll(async () => {\n    // Configure Serenity/JS\n    configure({\n        crew: [\n            '@serenity-js/console-reporter',\n            '@serenity-js/serenity-bdd',\n            [ '@serenity-js/core:ArtifactArchiver', { outputDirectory: 'target/site/serenity' } ],\n            // ... any other reporting services\n        ],\n    })\n})\n"))),(0,a.kt)(m,{value:"javascript",label:"JavaScript project",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="spec/support/serenity.config.js"',title:'"spec/support/serenity.config.js"'},"const { configure } = require('@serenity-js/core')\n\nbeforeAll(async () => {\n    // Configure Serenity/JS\n    configure({\n        crew: [\n            '@serenity-js/console-reporter',\n            '@serenity-js/serenity-bdd',\n            [ '@serenity-js/core:ArtifactArchiver', { outputDirectory: 'target/site/serenity' } ],\n            // ... any other reporting services\n        ],\n    })\n})\n")))),(0,a.kt)("p",null,"To learn more about installing and configuring Serenity/JS reporting services appropriate for your project,\nfollow the ",(0,a.kt)("a",{parentName:"p",href:"/handbook/reporting/"},"Serenity/JS reporting guide"),"."),(0,a.kt)("h3",{id:"configuring-mocha"},"Configuring Mocha"),(0,a.kt)("p",null,"To make sure Mocha loads your Serenity/JS configuration file and correctly interprets TypeScript (if you're using it),\ncreate one of the supported ",(0,a.kt)("a",{parentName:"p",href:"https://mochajs.org/#configuring-mocha-nodejs"},"Mocha configuration files")," in your project\nroot directory, e.g. ",(0,a.kt)("inlineCode",{parentName:"p"},".mocharc.yml"),":"),(0,a.kt)(u,{mdxType:"Tabs"},(0,a.kt)(m,{value:"typescript",label:"TypeScript project",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".mocharc.yml"',title:'".mocharc.yml"'},"check-leaks: false\nfull-trace: true\nreporter: '@serenity-js/mocha'\nrequire:\n  - ts-node/register\n  - spec/support/serenity.config.ts\nspec: 'spec/**/*.spec.ts'\ntimeout: 5000\nv8-stack-trace-limit: 100\n"))),(0,a.kt)(m,{value:"javascript",label:"JavaScript project",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".mocharc.yml"',title:'".mocharc.yml"'},"check-leaks: false\nfull-trace: true\nreporter: '@serenity-js/mocha'\nrequire:\n  - spec/support/serenity.config.js\nspec: 'spec/**/*.spec.js'\ntimeout: 5000\nv8-stack-trace-limit: 100\n")))),(0,a.kt)("h3",{id:"defining-mocha-test-scenarios"},"Defining Mocha test scenarios"),(0,a.kt)("p",null,"When Serenity/JS reports on Mocha test scenarios, it assumes you're following a common convention\nwhere the outermost ",(0,a.kt)("a",{parentName:"p",href:"https://mochajs.org/#bdd"},(0,a.kt)("inlineCode",{parentName:"a"},"describe")," block")," describes the name of the feature or component under test,\nand any nested ",(0,a.kt)("inlineCode",{parentName:"p"},"describe")," blocks contribute to the name of the test scenario."),(0,a.kt)("p",null,"For example, Serenity/JS will report the below scenario as:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"feature: ",(0,a.kt)("inlineCode",{parentName:"li"},"Todo List App")),(0,a.kt)("li",{parentName:"ul"},"scenario: ",(0,a.kt)("inlineCode",{parentName:"li"},"when the user is a guest their list is empty"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import 'mocha'\n\ndescribe('Todo List App', () => {               // - feature or component name\n\n    describe('when the user is', () => {        // - one or more nested `describe` blocks\n        describe('a guest', () => {             //   to group scenarios\n            describe('their list', () => {      //   by context in which they apply\n\n                it('is empty', async () => {    // - expected behaviour of the feature or component\n\n                })\n            })\n        })\n    })\n})\n")),(0,a.kt)("admonition",{title:"Feature coverage",type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"Using the same name for the outermost ",(0,a.kt)("inlineCode",{parentName:"p"},"describe"),' block in several different spec files makes\nSerenity BDD associate the different test scenarios with the same logical "feature" or "component"\nand produce ',(0,a.kt)("a",{parentName:"p",href:"https://serenity-bdd.github.io/docs/reporting/the_serenity_reports"},"feature coverage metrics"),".")),(0,a.kt)("h2",{id:"using-serenityjs-screenplay-pattern-apis"},"Using Serenity/JS Screenplay Pattern APIs"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/api/core/class/Actor"},"Serenity/JS actor model")," works great with Mocha\nand ",(0,a.kt)("a",{parentName:"p",href:"/handbook/design/screenplay-pattern"},"Serenity/JS Screenplay Pattern")," APIs can help your team implement\nMocha test scenarios that are easy to read and understand."),(0,a.kt)("p",null,"The fastest way to get started with Serenity/JS and Mocha is to use one of\nthe ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/serenity-js?q=mocha+template&type=all&language=&sort="},"Serenity/JS + Mocha project templates"),".\nHowever, if you're adding Serenity/JS to an existing project or simply want to understand how the integration works,\nthis guide is for you."),(0,a.kt)("h3",{id:"configuring-a-cast-of-actors"},"Configuring a cast of actors"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/handbook/design/screenplay-pattern"},"Serenity/JS Screenplay Pattern")," is an actor-centred model, so the first thing you\nneed to do is to tell Serenity/JS what ",(0,a.kt)("a",{parentName:"p",href:"/api/core/class/Cast"},"cast of actors")," you want to use."),(0,a.kt)("p",null,"If you're planning to run Mocha scenarios using the ",(0,a.kt)("a",{parentName:"p",href:"https://mochajs.org/#command-line-usage"},"Mocha CLI")," ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"directly")),",\nyou can configure the actors in a ",(0,a.kt)("a",{parentName:"p",href:"https://mochajs.org/#available-root-hooks"},(0,a.kt)("inlineCode",{parentName:"a"},"beforeAll"))," hook, for example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="spec/support/serenity.config.ts"',title:'"spec/support/serenity.config.ts"'},"import 'mocha'\n\nimport { configure, Cast } from '@serenity-js/core'\nimport { BrowseTheWebWithPlaywright } from '@serenity-js/playwright'\n\nimport * as playwright from 'playwright'\n\nlet browser: playwright.Browser;\n\nbeforeAll(async () => {\n\n    // Launch the browser once before all the tests\n    // Serenity/JS will take care of managing Playwright browser context and browser tabs.\n    browser = await playwright.chromium.launch({\n        headless: true,\n    });\n\n    // Configure Serenity/JS\n    configure({\n        actors: Cast.where(actor =>\n            actor.whoCan(BrowseTheWebWithPlaywright.using(browser, {\n                baseURL: 'https://todo-app.serenity-js.org/',\n            }))\n        ),\n        crew: [\n            '@serenity-js/console-reporter',\n            '@serenity-js/serenity-bdd',\n            [ '@serenity-js/core:ArtifactArchiver', { outputDirectory: 'target/site/serenity' } ],\n            // ... any other reporting services\n        ],\n    })\n})\n\nafterAll(async () => {\n    // Close the browser after all the tests are finished\n    await browser?.close()\n})\n")),(0,a.kt)("p",null,"Consult the respective test runner instructions if you're invoking Mocha ",(0,a.kt)("em",{parentName:"p"},(0,a.kt)("strong",{parentName:"em"},"indirectly")),",\nso via ",(0,a.kt)("a",{parentName:"p",href:"/handbook/test-runners/protractor"},"Protractor")," or ",(0,a.kt)("a",{parentName:"p",href:"/handbook/test-runners/webdriverio"},"WebdriverIO"),"."),(0,a.kt)("h3",{id:"referring-to-actors-in-test-scenarios"},"Referring to actors in test scenarios"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/api/core/class/Actor"},"Serenity/JS actors")," are often used to represent user personas or important external systems\ninteracting with the system under test. In those scenarios, a common strategy is to give actors names indicating their persona,\nand refer to them in your test scenarios using functions ",(0,a.kt)("a",{parentName:"p",href:"/api/core/function/actorCalled"},(0,a.kt)("inlineCode",{parentName:"a"},"actorCalled")),"\nand ",(0,a.kt)("a",{parentName:"p",href:"/api/core/function/actorInTheSpotlight"},(0,a.kt)("inlineCode",{parentName:"a"},"actorInTheSpotlight")),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="spec/todo-list.spec.ts"',title:'"spec/todo-list.spec.ts"'},"import 'mocha'\n\nimport { Ensure, equals } from '@serenity-js/assertions'\nimport { actorCalled } from '@serenity-js/core'\nimport { Navigate, PageElements, By } from '@serenity-js/web'\n\ndescribe('Todo List App', () => {\n\n    const displayedItems = () =>\n        PageElements.located(By.css('.todo-list li'))\n            .describedAs('displayed items')\n\n    describe('when the user is', () => {\n        describe('a guest', () => {\n            describe('their list', () => {\n\n                it('is empty', async () => {\n                    await actorCalled('Alice').attemptsTo(\n                        Navigate.to('https://todo-app.serenity-js.org/'),\n                        Ensure.that(displayedItems().count(), equals(0))\n                    )\n                })\n            })\n        })\n    })\n})\n")))}y.isMDXComponent=!0}}]);