"use strict";(self.webpackChunk_documentation_serenity_js_org=self.webpackChunk_documentation_serenity_js_org||[]).push([[6240],{82247:(e,t,n)=>{n.d(t,{xA:()=>g,yg:()=>y});var r=n(14041);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},g=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,g=s(e,["components","mdxType","originalType","parentName"]),p=l(n),m=a,y=p["".concat(c,".").concat(m)]||p[m]||u[m]||o;return n?r.createElement(y,i(i({ref:t},g),{},{components:n})):r.createElement(y,i({ref:t},g))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[p]="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},84014:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=n(89575),a=(n(14041),n(82247));const o={sidebar_position:4},i="Logging",s={unversionedId:"design/logging",id:"design/logging",title:"Logging",description:"Serenity/JS helps you model your test scenarios from the perspective of actors performing activities to accomplish their goals.",source:"@site/docs/design/logging.mdx",sourceDirName:"design",slug:"/design/logging",permalink:"/handbook/design/logging",draft:!1,editUrl:"https://github.com/serenity-js/serenity-js/tree/main/documentation/serenity-js.org/docs/design/logging.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"docs",previous:{title:"Waiting and synchronisation",permalink:"/handbook/design/waiting-and-synchronisation"},next:{title:"Debugging",permalink:"/handbook/design/debugging"}},c={},l=[],g={toc:l},p="wrapper";function u(e){let{components:t,...n}=e;return(0,a.yg)(p,(0,r.A)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"logging"},"Logging"),(0,a.yg)("p",null,"Serenity/JS helps you model your test scenarios from the perspective of ",(0,a.yg)("a",{parentName:"p",href:"/api/core/class/Actor"},"actors")," performing ",(0,a.yg)("a",{parentName:"p",href:"/api/core/class/Activity"},"activities")," to accomplish their goals.\nLogging follows this same consistent approach, with any log statements expressed using the interaction to ",(0,a.yg)("a",{parentName:"p",href:"/api/core/class/Log"},(0,a.yg)("inlineCode",{parentName:"a"},"Log")),"."),(0,a.yg)("p",null,"The interaction to ",(0,a.yg)("a",{parentName:"p",href:"/api/core/class/Log"},(0,a.yg)("inlineCode",{parentName:"a"},"Log"))," accepts any number of arguments, including dynamic values such as ",(0,a.yg)("a",{parentName:"p",href:"/api/core/class/Question"},"questions"),"\nand ",(0,a.yg)("a",{parentName:"p",href:"/api/core#QuestionAdapter"},"question adapters"),":"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-typescript"},"import { actorCalled, Log } from '@serenity-js/core'\nimport { Page } from '@serenity-js/web'\n\nawait actorCalled('Laura').attemptsTo(\n  Log.the('Current page', Page.current().title(), Page.current().url().href),\n  //  static value --^        question --^          question adapter --^\n)\n")),(0,a.yg)("p",null,"When the actor reaches the interaction to ",(0,a.yg)("a",{parentName:"p",href:"/api/core/class/Log"},(0,a.yg)("inlineCode",{parentName:"a"},"Log"))," in their workflow, the interaction:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"evaluates the arguments in the context of the given actor,"),(0,a.yg)("li",{parentName:"ul"},"makes the actor ",(0,a.yg)("a",{parentName:"li",href:"/api/core/class/Actor#collect"},"collect")," data artifacts with the results of the evaluation,"),(0,a.yg)("li",{parentName:"ul"},"the actor emits collected artifacts as ",(0,a.yg)("a",{parentName:"li",href:"/handbook/reporting/domain-events"},"domain events"),","),(0,a.yg)("li",{parentName:"ul"},"domain events are announced to all the registered ",(0,a.yg)("a",{parentName:"li",href:"/handbook/reporting/"},"Serenity/JS reporting services"),".")),(0,a.yg)("p",null,"Since the interaction to ",(0,a.yg)("inlineCode",{parentName:"p"},"Log")," relies on Serenity/JS domain events to propagate the information,\nall the registered reporting services receive the exact same information and can include it in their respective reports."))}u.isMDXComponent=!0}}]);