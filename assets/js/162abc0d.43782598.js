"use strict";(self.webpackChunk_documentation_serenity_js_org=self.webpackChunk_documentation_serenity_js_org||[]).push([[3534],{30876:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var n=r(2784);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(r),h=a,d=m["".concat(l,".").concat(h)]||m[h]||u[h]||o;return r?n.createElement(d,s(s({ref:t},c),{},{components:r})):n.createElement(d,s({ref:t},c))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=h;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[m]="string"==typeof e?e:a,s[1]=i;for(var p=2;p<o;p++)s[p]=r[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}h.displayName="MDXCreateElement"},47562:(e,t,r)=>{r.r(t),r.d(t,{contentTitle:()=>s,default:()=>c,frontMatter:()=>o,toc:()=>i});var n=r(7896),a=(r(2784),r(30876));const o={},s=void 0,i=[{value:"Serenity/JS Local Server",id:"serenityjs-local-server",level:2},{value:"Installation",id:"installation",level:3},{value:"Example test",id:"example-test",level:3},{value:"Creating a server",id:"creating-a-server",level:3},{value:"Raw Node.js",id:"raw-nodejs",level:4},{value:"Express",id:"express",level:4},{value:"HAPI",id:"hapi",level:4},{value:"Koa",id:"koa",level:4},{value:"Restify",id:"restify",level:4}],l={toc:i},p="wrapper";function c(e){let{components:t,...r}=e;return(0,a.kt)(p,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.linkedin.com/company/serenity-js"},(0,a.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/Follow-Serenity%2FJS%20-0077B5?logo=linkedin",alt:"Follow Serenity/JS on LinkedIn"})),"\n",(0,a.kt)("a",{parentName:"p",href:"https://www.youtube.com/@serenity-js"},(0,a.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/Watch-@serenity--js-E62117?logo=youtube",alt:"Watch Serenity/JS on YouTube"})),"\n",(0,a.kt)("a",{parentName:"p",href:"https://matrix.to/#/#serenity-js:gitter.im"},(0,a.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/Chat-Serenity%2FJS%20Community-FBD30B?logo=matrix",alt:"Join Serenity/JS Community Chat"})),"\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/sponsors/serenity-js"},(0,a.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/Support-@serenity--js-703EC8?logo=github",alt:"Support Serenity/JS on GitHub"}))),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://serenity-js.org"},"Serenity/JS")," is an innovative framework designed to make acceptance and regression testing\nof complex software systems faster, more collaborative and easier to scale."),(0,a.kt)("p",null,"To get started, check out the comprehensive ",(0,a.kt)("a",{parentName:"p",href:"https://serenity-js.org/handbook"},"Serenity/JS Handbook"),", ",(0,a.kt)("a",{parentName:"p",href:"https://serenity-js.org/api/core"},"API documentation"),", and ",(0,a.kt)("a",{parentName:"p",href:"https://serenity-js.org/handbook/getting-started#serenityjs-project-templates"},"Serenity/JS project templates on GitHub"),"."),(0,a.kt)("p",null,"If you have any questions or just want to say hello, join the ",(0,a.kt)("a",{parentName:"p",href:"https://matrix.to/#/#serenity-js:gitter.im"},"Serenity/JS Community Chat"),"."),(0,a.kt)("h2",{id:"serenityjs-local-server"},"Serenity/JS Local Server"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://serenity-js.org/modules/local-server/"},(0,a.kt)("inlineCode",{parentName:"a"},"@serenity-js/local-server"))," enables Serenity/JS Actors to manage local HTTP or HTTPS test servers powered by ",(0,a.kt)("a",{parentName:"p",href:"https://expressjs.com/"},"Express"),",\n",(0,a.kt)("a",{parentName:"p",href:"https://hapijs.com/"},"Hapi"),",\n",(0,a.kt)("a",{parentName:"p",href:"https://koajs.com/"},"Koa"),",\n",(0,a.kt)("a",{parentName:"p",href:"http://restify.com/"},"Restify"),"\nor raw ",(0,a.kt)("a",{parentName:"p",href:"https://nodejs.org/en/docs/guides/anatomy-of-an-http-transaction/"},"Node.js"),"."),(0,a.kt)("h3",{id:"installation"},"Installation"),(0,a.kt)("p",null,"To install this module, run the following command in your computer terminal:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-console"},"npm install --save-dev @serenity-js/{core,local-server}\n")),(0,a.kt)("h3",{id:"example-test"},"Example test"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"import { actorCalled } from '@serenity-js/core';\nimport {\n    ManageALocalServer, StartLocalTestServer, StopLocalTestServer\n} from '@serenity-js/local-server'\nimport { CallAnApi, GetRequest, Send } from '@serenity-js/rest';\nimport { Ensure, equals } from '@serenity-js/assertions';\nimport axios from 'axios';\n\nimport { requestListener } from './listener';                           (1)\n\nconst actor = actorCalled('Apisit').whoCan(\n    ManageALocalServer.using(requestListener),                          (2)\n    CallAnApi.using(axios.create()),\n);\n\nactor.attemptsTo(\n    StartLocalTestServer.onRandomPort(),                                (3)\n    Send.a(GetRequest.to(LocalServer.url())),                           (4)\n    Ensure.that(LastResponse.status(), equals(200)),\n    Ensure.that(LastResponse.body(), equals('Hello!')),\n    StopLocalTestServer.ifRunning(),                                    (5)\n);\n")),(0,a.kt)("p",null,"In the above example:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"A ",(0,a.kt)("inlineCode",{parentName:"li"},"requestListener")," to be tested is imported."),(0,a.kt)("li",{parentName:"ol"},"The ",(0,a.kt)("inlineCode",{parentName:"li"},"Actor")," is given an ",(0,a.kt)("inlineCode",{parentName:"li"},"Ability")," to ",(0,a.kt)("inlineCode",{parentName:"li"},"ManageALocalServer"),". This enables the ",(0,a.kt)("inlineCode",{parentName:"li"},"Interaction")," to ",(0,a.kt)("inlineCode",{parentName:"li"},"StartLocalTestServer")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"StopLocalTestServer"),", as well as the ",(0,a.kt)("inlineCode",{parentName:"li"},"LocalServer")," ",(0,a.kt)("inlineCode",{parentName:"li"},"Question"),"."),(0,a.kt)("li",{parentName:"ol"},"The local server is started on a random port, although you can specify a port range if you prefer."),(0,a.kt)("li",{parentName:"ol"},"The url of the local server is retrieved and used to test an interaction with its HTTP API."),(0,a.kt)("li",{parentName:"ol"},"The local server is stopped when the test is complete. Please note that you probably want to ",(0,a.kt)("inlineCode",{parentName:"li"},"StopLocalTestServer")," in an ",(0,a.kt)("inlineCode",{parentName:"li"},"afterEach")," block of your test (or something equivalent) to make sure that the server is correctly shut down even when the test fails.")),(0,a.kt)("h3",{id:"creating-a-server"},"Creating a server"),(0,a.kt)("p",null,"Any ",(0,a.kt)("inlineCode",{parentName:"p"},"requestListener")," that Node's\n",(0,a.kt)("a",{parentName:"p",href:"https://nodejs.org/api/http.html#http_http_createserver_options_requestlistener"},(0,a.kt)("inlineCode",{parentName:"a"},"http.createServer")),"\nor ",(0,a.kt)("a",{parentName:"p",href:"https://nodejs.org/api/https.html#https_https_createserver_options_requestlistener"},(0,a.kt)("inlineCode",{parentName:"a"},"https.createServer")),"\nwould accept can be used with ",(0,a.kt)("inlineCode",{parentName:"p"},"ManageALocalServer"),"."),(0,a.kt)("p",null,"Below are example implementations of a simple HTTP server that would\nsatisfy the above test."),(0,a.kt)("h4",{id:"raw-nodejs"},"Raw Node.js"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"// listener.js\nmodule.exports.requestListener = (request, response) => {\n  response.setHeader('Connection', 'close');\n  response.end('Hello World!');\n}\n")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://nodejs.org/en/docs/guides/anatomy-of-an-http-transaction/"},"Learn more about Node.js"),"."),(0,a.kt)("h4",{id:"express"},"Express"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"// listener.js\nconst express = require('express');\n\nmodule.exports.requestListener = express().\n    get('/', (req: express.Request, res: express.Response) => {\n        res.status(200).send('Hello World!');\n    });\n")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://expressjs.com/"},"Learn more about Express"),"."),(0,a.kt)("h4",{id:"hapi"},"HAPI"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"// listener.js\nconst hapi = require('@hapi/hapi');\n\nconst server = new hapi.Server();\nserver.route({ method: 'GET', path: '/', handler: (req, h) => 'Hello World!' })\n\nmodule.exports.requestListener = server.listener;\n")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://hapijs.com/"},"Learn more about HAPI"),"."),(0,a.kt)("h4",{id:"koa"},"Koa"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"// listener.js\nconst Koa = require('koa');\n\nmodule.exports.requestListener = new Koa()\n    .use(ctx => Promise.resolve(ctx.body = 'Hello World!'))\n    .callback();\n")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://koajs.com/"},"Learn more about Koa"),"."),(0,a.kt)("h4",{id:"restify"},"Restify"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"// listener.js\nconst restify = require('restify');\n\nconst server = restify.createServer(options);\n\nserver.get('/', (req, res, next) => {\n    res.send('Hello World!');\n});\n\nmodule.exports.requestListener = server;\n")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"http://restify.com/"},"Learn more about Restify"),"."))}c.isMDXComponent=!0}}]);