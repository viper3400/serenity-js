"use strict";(self.webpackChunk_documentation_serenity_js_org=self.webpackChunk_documentation_serenity_js_org||[]).push([[18769],{30876:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>h});var n=r(2784);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var p=n.createContext({}),l=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=l(e.components);return n.createElement(p.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=l(r),m=i,h=c["".concat(p,".").concat(m)]||c[m]||u[m]||a;return r?n.createElement(h,o(o({ref:t},d),{},{components:r})):n.createElement(h,o({ref:t},d))}));function h(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[c]="string"==typeof e?e:i,o[1]=s;for(var l=2;l<a;l++)o[l]=r[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},61820:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var n=r(7896),i=(r(2784),r(30876));const a={sidebar_position:6},o="WebdriverIO",s={unversionedId:"test-runners/webdriverio",id:"test-runners/webdriverio",title:"WebdriverIO",description:"WebdriverIO is a progressive automation framework built to automate modern web and mobile applications.",source:"@site/docs/test-runners/webdriverio.mdx",sourceDirName:"test-runners",slug:"/test-runners/webdriverio",permalink:"/handbook/test-runners/webdriverio",draft:!1,editUrl:"https://github.com/serenity-js/serenity-js/tree/main/documentation/serenity-js.org/docs/test-runners/webdriverio.mdx",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Protractor",permalink:"/handbook/test-runners/protractor"},next:{title:"Reporting",permalink:"/handbook/reporting/"}},p={},l=[{value:"Examples and Project Templates",id:"examples-and-project-templates",level:2},{value:"Using Serenity/JS reporting services",id:"using-serenityjs-reporting-services",level:2},{value:"Installing Serenity/JS test runner adapter",id:"installing-serenityjs-test-runner-adapter",level:3},{value:"Configuring Serenity/JS",id:"configuring-serenityjs",level:3},{value:"Configuring WebdriverIO",id:"configuring-webdriverio",level:3},{value:"Using Serenity/JS Screenplay Pattern APIs",id:"using-serenityjs-screenplay-pattern-apis",level:2},{value:"Referring to actors in test scenarios",id:"referring-to-actors-in-test-scenarios",level:3},{value:"Configuring a custom cast of actors",id:"configuring-a-custom-cast-of-actors",level:3}],d={toc:l},c="wrapper";function u(e){let{components:t,...r}=e;return(0,i.kt)(c,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"webdriverio"},"WebdriverIO"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://webdriver.io/"},"WebdriverIO")," is a progressive automation framework built to automate modern web and mobile applications.\nWebdriverIO leverages the power of the ",(0,i.kt)("a",{parentName:"p",href:"https://w3c.github.io/webdriver/"},"WebDriver")," and ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/w3c/webdriver-bidi"},"WebDriver-BiDi")," protocols that are developed and supported\nby all browser vendors and guarantees a true cross-browser testing experience.\nFurthermore, WebdriverIO also supports alternative, proprietary automation protocols like ",(0,i.kt)("a",{parentName:"p",href:"https://chromedevtools.github.io/devtools-protocol/"},"Chrome DevTools")," via ",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/puppeteer"},"Puppeteer"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"You will learn:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"How to use ",(0,i.kt)("a",{parentName:"li",href:"/handbook/reporting/"},"Serenity/JS reporting services"),", including the ",(0,i.kt)("a",{parentName:"li",href:"/handbook/reporting/serenity-bdd-reporter"},"Serenity BDD reporter"),", even if your test scenarios don't follow the Screenplay Pattern yet"),(0,i.kt)("li",{parentName:"ul"},"How to implement WebdriverIO test scenarios using reusable ",(0,i.kt)("a",{parentName:"li",href:"/handbook/design/screenplay-pattern"},"Serenity/JS Screenplay Pattern")," APIs and the ",(0,i.kt)("a",{parentName:"li",href:"/api/webdriverio"},"Serenity/JS WebdriverIO module"))),(0,i.kt)("h2",{id:"examples-and-project-templates"},"Examples and Project Templates"),(0,i.kt)("p",null,"If you'd like to dive straight into the code, ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/serenity-js"},"Serenity/JS GitHub repository")," provides:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/serenity-js?q=webdriverio+template&type=all&language=&sort="},"Serenity/JS + WebdriverIO project templates"),", which are the easiest way to start with the framework,"),(0,i.kt)("li",{parentName:"ul"},"several ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/serenity-js/serenity-js/tree/main/examples"},"reference implementations"),", demonstrating using Serenity/JS with WebdriverIO to write web-based acceptance tests")),(0,i.kt)("h2",{id:"using-serenityjs-reporting-services"},"Using Serenity/JS reporting services"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/api/webdriverio"},(0,i.kt)("inlineCode",{parentName:"a"},"@serenity-js/webdriverio")," module")," provides a ",(0,i.kt)("a",{parentName:"p",href:"/handbook/about/architecture"},(0,i.kt)("strong",{parentName:"a"},"test runner adapter")),"\nyou can attach to your ",(0,i.kt)("a",{parentName:"p",href:"https://webdriver.io/docs/testrunner"},"WebdriverIO test runner"),"\njust like any other standard ",(0,i.kt)("a",{parentName:"p",href:"https://webdriver.io/docs/configurationfile"},"WebdriverIO ",(0,i.kt)("inlineCode",{parentName:"a"},"framework")),"."),(0,i.kt)("admonition",{title:"Serenity/JS test runner adapters",type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"Serenity/JS test runner adapters turn internal, test runner-specific events\ninto ",(0,i.kt)("a",{parentName:"p",href:"/handbook/reporting/domain-events"},"Serenity/JS domain events")," that can contribute to test execution reports produced\nby ",(0,i.kt)("a",{parentName:"p",href:"/handbook/reporting/"},"Serenity/JS reporting services"),".")),(0,i.kt)("p",null,"To use ",(0,i.kt)("a",{parentName:"p",href:"/handbook/reporting/"},"Serenity/JS reporting services")," in a WebdriverIO Test project, you need to:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"attach the ",(0,i.kt)("a",{parentName:"li",href:"/api/webdriverio"},(0,i.kt)("inlineCode",{parentName:"a"},"@serenity-js/webdriverio"))," test runner adapter to the WebdriverIO test runner"),(0,i.kt)("li",{parentName:"ul"},"use ",(0,i.kt)("inlineCode",{parentName:"li"},"wdio.conf.ts")," to ",(0,i.kt)("a",{parentName:"li",href:"/api/webdriverio/interface/WebdriverIOConfig"},"configure Serenity/JS")," to use the reporting services you want to use,\nsuch as the ",(0,i.kt)("a",{parentName:"li",href:"/handbook/reporting/console-reporter"},(0,i.kt)("inlineCode",{parentName:"a"},"ConsoleReporter")),"\nor ",(0,i.kt)("a",{parentName:"li",href:"/handbook/reporting/serenity-bdd-reporter"},(0,i.kt)("inlineCode",{parentName:"a"},"SerenityBDDReporter")))),(0,i.kt)("figure",null,(0,i.kt)("mermaid",{value:'graph TB\n    SUT(["Web App"])\n    DEV(["\ud83d\udcbb Developer"])\n    WdioCli["wdio"]\n    Wdio(["WebdriverIO"])\n    ConfigFile["wdio.conf.ts"]\n    SWdioAdapter(["@serenity-js/webdriverio/adapter"])\n    SWeb(["@serenity-js/web"])\n    SWdio(["@serenity-js/webdriverio"])\n    SCore(["@serenity-js/core"])\n    TR(["3rd-party test runner"])\n    TRA(["Serenity/JS test runner adapter"])\n    Specs["test scenarios"]\n    R(["Serenity/JS reporting services"])\n\n    DEV -- invokes --\x3e WdioCli\n    WdioCli -- loads --\x3e ConfigFile\n    WdioCli -- uses --\x3e SWdioAdapter\n    ConfigFile -- configures --\x3e SCore\n    SWdioAdapter -- registers --\x3e TRA\n    SWdioAdapter -- manages --\x3e TR\n    TR -- notifies --\x3e TRA\n    TR -- executes --\x3e Specs\n    Specs -- use --\x3e SWeb\n    SWeb -- notifies --\x3e SCore\n\n    SWeb -- uses --\x3e SWdio\n\n    SWdio -- uses --\x3e Wdio\n\n    Wdio -- interacts with --\x3e SUT\n\n    TRA -- notifies --\x3e SCore\n    SCore -- notifies --\x3e R\n\n    click SWdio "/api/webdriverio"\n    click SWeb "/api/web"\n    click SCore "/api/core"\n    click R "/handbook/reporting"'}),(0,i.kt)("figcaption",null,"Serenity/JS + WebdriverIO integration architecture")),(0,i.kt)("h3",{id:"installing-serenityjs-test-runner-adapter"},"Installing Serenity/JS test runner adapter"),(0,i.kt)("p",null,"Follow ",(0,i.kt)("a",{parentName:"p",href:"https://webdriver.io/docs/gettingstarted"},"WebdriverIO installation instructions"),"\nto create a new WebdriverIO project."),(0,i.kt)("admonition",{title:"Use TypeScript to get the most out of your development tools",type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"WebdriverIO installation wizard will ask you whether you want to use TypeScript or JavaScript\nto implement your test scenarios.\nChoosing TypeScript offers improved tooling support in IDEs such\nas ",(0,i.kt)("a",{parentName:"p",href:"/handbook/integration/jetbrains-idea"},"JetBrains")," and ",(0,i.kt)("a",{parentName:"p",href:"/handbook/integration/visual-studio-code"},"Visual Studio Code"),".")),(0,i.kt)("p",null,"Next, add Serenity/JS WebdriverIO and web integration modules:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/api/core"},(0,i.kt)("inlineCode",{parentName:"a"},"@serenity-js/core"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/api/webdriverio"},(0,i.kt)("inlineCode",{parentName:"a"},"@serenity-js/webdriverio"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/api/web"},(0,i.kt)("inlineCode",{parentName:"a"},"@serenity-js/web")))),(0,i.kt)("p",null,"You might also want to install Serenity/JS reporting services:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/api/console-reporter"},(0,i.kt)("inlineCode",{parentName:"a"},"@serenity-js/console-reporter"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/api/serenity-bdd"},(0,i.kt)("inlineCode",{parentName:"a"},"@serenity-js/serenity-bdd")))),(0,i.kt)("p",null,"To do the above, run the following command in your terminal:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"npm install --save-dev @serenity-js/{core,console-reporter,webdriverio,web,serenity-bdd}\n")),(0,i.kt)("p",null,"WebdriverIO offers a ",(0,i.kt)("a",{parentName:"p",href:"https://webdriver.io/docs/runner#local-runner"},"local runner")," that\nuses Jasmine, Mocha, or Cucumber to run your test scenarios.\nSince the task of running the scenarios is delegated to another tool,\nyou'll need to follow the installation instructions to add a Serenity/JS test runner adapter for the runner you've decided to use."),(0,i.kt)("p",null,"See Serenity/JS test runner adapter installation instructions for:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/handbook/test-runners/cucumber#installing-serenityjs-test-runner-adapter"},"Cucumber")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/handbook/test-runners/jasmine#installing-serenityjs-test-runner-adapter"},"Jasmine")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/handbook/test-runners/mocha#installing-serenityjs-test-runner-adapter"},"Mocha"))),(0,i.kt)("h3",{id:"configuring-serenityjs"},"Configuring Serenity/JS"),(0,i.kt)("p",null,"To use ",(0,i.kt)("a",{parentName:"p",href:"/handbook/reporting/"},"Serenity/JS reporting services")," in a WebdriverIO project,\nmodify your ",(0,i.kt)("a",{parentName:"p",href:"https://webdriver.io/docs/configurationfile/"},(0,i.kt)("inlineCode",{parentName:"a"},"wdio.conf.ts")," configuration file"),"\nto register ",(0,i.kt)("a",{parentName:"p",href:"/api/webdriverio"},"Serenity/JS WebdriverIO adapter")," as a ",(0,i.kt)("a",{parentName:"p",href:"https://webdriver.io/docs/frameworks"},"WebdriverIO ",(0,i.kt)("inlineCode",{parentName:"a"},"framework")),"\nand list any ",(0,i.kt)("a",{parentName:"p",href:"/handbook/reporting"},"Serenity/JS reporting services")," under ",(0,i.kt)("inlineCode",{parentName:"p"},"crew"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="wdio.conf.ts"',title:'"wdio.conf.ts"'},"import { WebdriverIOConfig } from '@serenity-js/webdriverio';\n\nexport const config: WebdriverIOConfig = {\n    framework: '@serenity-js/webdriverio',\n    serenity: {\n        crew: [\n            '@serenity-js/console-reporter',\n            '@serenity-js/serenity-bdd',\n            [ '@serenity-js/core:ArtifactArchiver', { outputDirectory: 'target/site/serenity' } ],\n        ],\n    },\n}\n")),(0,i.kt)("p",null,"Learn more about configuring ",(0,i.kt)("a",{parentName:"p",href:"/api/webdriverio"},"Serenity/JS WebdriverIO adapter")," and ",(0,i.kt)("a",{parentName:"p",href:"/handbook/reporting/"},"Serenity/JS reporting services"),"."),(0,i.kt)("h3",{id:"configuring-webdriverio"},"Configuring WebdriverIO"),(0,i.kt)("p",null,"WebdriverIO relies on Cucumber, Jasmine, or Mocha to execute your test scenarios.\nHowever, it is responsible for configuring the test runners themselves.\nTo learn about the test runner configuration options, follow the ",(0,i.kt)("a",{parentName:"p",href:"/api/webdriverio#configuring-webdriverio"},"Serenity/JS WebdriverIO configuration guide"),"."),(0,i.kt)("p",null,"To find out how to define test scenarios, check out the respective guide on using Serenity/JS with:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/handbook/test-runners/cucumber"},"Cucumber")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/handbook/test-runners/jasmine"},"Jasmine")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/handbook/test-runners/mocha"},"Mocha"))),(0,i.kt)("p",null,"To learn about other WebdriverIO configuration options, consult the ",(0,i.kt)("a",{parentName:"p",href:"https://webdriver.io/docs/configuration"},"WebdriverIO documentation"),"."),(0,i.kt)("h2",{id:"using-serenityjs-screenplay-pattern-apis"},"Using Serenity/JS Screenplay Pattern APIs"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/api/core/class/Actor"},"Serenity/JS actor model")," works great with WebdriverIO\nand ",(0,i.kt)("a",{parentName:"p",href:"/handbook/design/screenplay-pattern"},"Serenity/JS Screenplay Pattern")," APIs can help your team implement\nWebdriverIO test scenarios that are easy to read and understand."),(0,i.kt)("p",null,"The fastest way to get started with Serenity/JS and WebdriverIO is to use one of\nthe ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/serenity-js?q=webdriverio+template&type=all&language=&sort="},"Serenity/JS + WebdriverIO project templates"),".\nHowever, if you're adding Serenity/JS to an existing project or simply want to understand how the integration works,\nthis guide is for you."),(0,i.kt)("h3",{id:"referring-to-actors-in-test-scenarios"},"Referring to actors in test scenarios"),(0,i.kt)("p",null,"When you configure ",(0,i.kt)("a",{parentName:"p",href:"/api/webdriverio"},"Serenity/JS WebdriverIO"),"\nas the ",(0,i.kt)("a",{parentName:"p",href:"/handbook/test-runners/webdriverio#configuring-serenityjs"},"WebdriverIO ",(0,i.kt)("inlineCode",{parentName:"a"},"framework")),",\nSerenity/JS automatically creates and makes available a default ",(0,i.kt)("a",{parentName:"p",href:"/api/core/class/Cast"},"cast of actors"),"\nwhere every actor has the abilities to:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/api/webdriverio/class/BrowseTheWebWithWebdriverIO"},(0,i.kt)("inlineCode",{parentName:"a"},"BrowseTheWebWithWebdriverIO"))," using the global ",(0,i.kt)("inlineCode",{parentName:"li"},"browser")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/api/core/class/TakeNotes"},(0,i.kt)("inlineCode",{parentName:"a"},"TakeNotes.usingAnEmptyNotepad()")))),(0,i.kt)("p",null,"This means that any actors you refer to in your test scenarios using\n",(0,i.kt)("a",{parentName:"p",href:"/api/core/function/actorCalled"},(0,i.kt)("inlineCode",{parentName:"a"},"actorCalled")),"\nand ",(0,i.kt)("a",{parentName:"p",href:"/api/core/function/actorInTheSpotlight"},(0,i.kt)("inlineCode",{parentName:"a"},"actorInTheSpotlight"))," functions are configured using\nthis default cast, and already have access to the WebdriverIO-managed browser instance."),(0,i.kt)("p",null,"Since WebdriverIO uses Jasmine, Mocha, or Cucumber to run your test scenarios, please refer to their\ndedicated guides to learn more about using Serenity/JS actors with:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/handbook/test-runners/cucumber#referring-to-actors-in-test-scenarios"},"Cucumber")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/handbook/test-runners/jasmine#referring-to-actors-in-test-scenarios"},"Jasmine")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/handbook/test-runners/mocha#referring-to-actors-in-test-scenarios"},"Mocha"))),(0,i.kt)("h3",{id:"configuring-a-custom-cast-of-actors"},"Configuring a custom cast of actors"),(0,i.kt)("p",null,"You can replace the default ",(0,i.kt)("a",{parentName:"p",href:"/api/core/class/Cast"},"cast of actors"),"\nby providing a custom implementation via ",(0,i.kt)("a",{parentName:"p",href:"/api/webdriverio/interface/WebdriverIOConfig#serenity"},(0,i.kt)("inlineCode",{parentName:"a"},"serenity.actors")),"\nconfiguration option in your ",(0,i.kt)("inlineCode",{parentName:"p"},"wdio.conf.ts"),"."),(0,i.kt)("p",null,"For example, to implement a cast where every actor can ",(0,i.kt)("a",{parentName:"p",href:"/api/webdriverio/class/BrowseTheWebWithWebdriverIO"},(0,i.kt)("inlineCode",{parentName:"a"},"BrowseTheWebWithWebdriverIO")),",\n",(0,i.kt)("a",{parentName:"p",href:"/api/core/class/TakeNotes"},(0,i.kt)("inlineCode",{parentName:"a"},"TakeNotes"))," and ",(0,i.kt)("a",{parentName:"p",href:"/api/rest/class/CallAnApi"},(0,i.kt)("inlineCode",{parentName:"a"},"CallAnApi")),", you could create a ",(0,i.kt)("inlineCode",{parentName:"p"},"MyActors")," class like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="test/MyActors.ts"',title:'"test/MyActors.ts"'},"import { Actor, Cast, TakeNotes } from '@serenity-js/core'\nimport { CallAnApi } from '@serenity-js/rest'\nimport { BrowseTheWebWithWebdriverIO } from '@serenity-js/webdriverio'\n\nexport class MyActors implements Cast {\n    // use constructor parameters to pass properties from the configuration file\n    constructor(private readonly apiUrl: string) {\n    }\n\n    prepare(actor: Actor): Actor {\n        return actor.whoCan(\n            BrowseTheWebWithWebdriverIO.using(browser), // use global browser object\n            TakeNotes.usingAnEmptyNotepad(),\n            CallAnApi.at(this.apiUrl),\n        );\n    }\n}\n")),(0,i.kt)("admonition",{title:"No browser in the configuration file",type:"info"},(0,i.kt)("p",{parentName:"admonition"},"WebdriverIO doesn't allow you to use the ",(0,i.kt)("inlineCode",{parentName:"p"},"browser")," global variable in ",(0,i.kt)("inlineCode",{parentName:"p"},"wdio.conf.ts"),".\nThat's why you need to create a custom implementation of ",(0,i.kt)("a",{parentName:"p",href:"/api/core/class/Cast"},(0,i.kt)("inlineCode",{parentName:"a"},"Cast")),"\nand only refer to ",(0,i.kt)("inlineCode",{parentName:"p"},"browser")," in ",(0,i.kt)("a",{parentName:"p",href:"/api/core/class/Cast#prepare"},(0,i.kt)("inlineCode",{parentName:"a"},"Cast.prepare"))," method.")),(0,i.kt)("p",null,"Next, modify your WebdriverIO configuration file to provide your custom ",(0,i.kt)("inlineCode",{parentName:"p"},"MyActors")," implementation:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="wdio.conf.ts"',title:'"wdio.conf.ts"'},"import { WebdriverIOConfig } from '@serenity-js/webdriverio'\n// highlight-next-line\nimport { MyActors } from './test/MyActors'\n\nexport const config: WebdriverIOConfig = {\n    framework: '@serenity-js/webdriverio',\n    serenity: {\n        // highlight-next-line\n        actors: new MyActors('https://api.example.org'),\n        crew: [\n            '@serenity-js/console-reporter',\n            '@serenity-js/serenity-bdd',\n            [ '@serenity-js/core:ArtifactArchiver', { outputDirectory: 'target/site/serenity' } ],\n        ],\n    },\n}\n")))}u.isMDXComponent=!0}}]);