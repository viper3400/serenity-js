"use strict";(self.webpackChunk_documentation_serenity_js_org=self.webpackChunk_documentation_serenity_js_org||[]).push([[90021],{30876:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>h});var a=r(2784);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=a.createContext({}),l=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=l(e.components);return a.createElement(p.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,p=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=l(r),c=n,h=m["".concat(p,".").concat(c)]||m[c]||u[c]||i;return r?a.createElement(h,o(o({ref:t},d),{},{components:r})):a.createElement(h,o({ref:t},d))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=c;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[m]="string"==typeof e?e:n,o[1]=s;for(var l=2;l<i;l++)o[l]=r[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}c.displayName="MDXCreateElement"},28185:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var a=r(7896),n=(r(2784),r(30876));const i={sidebar_position:4,title:"Architecture"},o="Serenity/JS Architecture",s={unversionedId:"getting-started/architecture",id:"getting-started/architecture",title:"Architecture",description:"Serenity/JS is a modular, full-stack acceptance testing framework based on Node.js.",source:"@site/docs/getting-started/architecture.mdx",sourceDirName:"getting-started",slug:"/getting-started/architecture",permalink:"/handbook/getting-started/architecture",draft:!1,editUrl:"https://github.com/serenity-js/serenity-js/tree/main/documentation/serenity-js.org/docs/getting-started/architecture.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,title:"Architecture"},sidebar:"tutorialSidebar",previous:{title:"Installing Serenity/JS",permalink:"/handbook/getting-started/installation"},next:{title:"Semantic versioning",permalink:"/handbook/getting-started/versioning"}},p={},l=[{value:"Serenity/JS Test Runner Adapters",id:"serenityjs-test-runner-adapters",level:2},{value:"Serenity/JS Reporting Services",id:"serenityjs-reporting-services",level:2},{value:"Serenity/JS Screenplay Pattern APIs",id:"serenityjs-screenplay-pattern-apis",level:2},{value:"What Serenity/JS modules do I need?",id:"what-serenityjs-modules-do-i-need",level:2},{value:"Integration architecture summary",id:"integration-architecture-summary",level:2}],d={toc:l},m="wrapper";function u(e){let{components:t,...r}=e;return(0,n.kt)(m,(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"serenityjs-architecture"},"Serenity/JS Architecture"),(0,n.kt)("p",null,"Serenity/JS is a ",(0,n.kt)("strong",{parentName:"p"},"modular"),", ",(0,n.kt)("strong",{parentName:"p"},"full-stack acceptance testing framework")," based on Node.js.\nThe official Serenity/JS Node modules are distributed via ",(0,n.kt)("a",{parentName:"p",href:"https://www.npmjs.com/"},"NPM"),"\nunder the ",(0,n.kt)("a",{parentName:"p",href:"https://www.npmjs.com/search?q=%40serenity-js"},(0,n.kt)("inlineCode",{parentName:"a"},"@serenity-js/*")," namespace"),", and you can use as many or as few of them as you need to\nto improve the reporting capabilities of your test suite,\nintegrate with the various interfaces of your system under test,\nand introduce advanced code reuse patterns in your organisation."),(0,n.kt)("p",null,"At the high level, Serenity/JS framework is a ",(0,n.kt)("a",{parentName:"p",href:"/api"},(0,n.kt)("strong",{parentName:"a"},"collection of modules"))," where each module provides at least one of the following:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/handbook/design/screenplay-pattern"},(0,n.kt)("strong",{parentName:"a"},"Screenplay Pattern")),"-based ",(0,n.kt)("strong",{parentName:"li"},"integration library")," for the given interface of your system under test"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/handbook/test-runners/"},(0,n.kt)("strong",{parentName:"a"},"Test Runner Adapter"))," that translates your test runner events into ",(0,n.kt)("a",{parentName:"li",href:"/handbook/reporting/domain-events"},"Serenity/JS domain events")," used for ",(0,n.kt)("a",{parentName:"li",href:"/handbook/reporting/"},"reporting")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/handbook/reporting/"},(0,n.kt)("strong",{parentName:"a"},"Reporting Services"))," that translate Serenity/JS domain events into test reports")),(0,n.kt)("p",null,"To build a Serenity/JS-based test automation framework, you pick those Serenity/JS modules that provide the capabilities\n",(0,n.kt)("strong",{parentName:"p"},"supporting the type of testing")," and ",(0,n.kt)("strong",{parentName:"p"},"reporting")," you want to do.\nIf you wish, you can also ",(0,n.kt)("strong",{parentName:"p"},"extend Serenity/JS")," and create your own modules that ",(0,n.kt)("a",{parentName:"p",href:"/api/core/class/Ability"},"wrap another low-level integration library"),",\nor interact with an interface that the framework itself doesn't support yet!"),(0,n.kt)("h2",{id:"serenityjs-test-runner-adapters"},"Serenity/JS Test Runner Adapters"),(0,n.kt)("p",null,"Serenity/JS ",(0,n.kt)("strong",{parentName:"p"},"Test Runner Adapters")," are tiny reporting libraries that ",(0,n.kt)("strong",{parentName:"p"},"attach to your test runner of choice"),".\nThe responsibility of an adapter is to listen to the actions performed by the test runner and translate them to ",(0,n.kt)("a",{parentName:"p",href:"/handbook/reporting/domain-events"},"Serenity/JS Domain Events"),",\nwhich are then used for ",(0,n.kt)("a",{parentName:"p",href:"/handbook/reporting/"},"test reporting purposes"),"."),(0,n.kt)("admonition",{title:"First steps with Serenity/JS",type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"Setting up a Serenity/JS test runner adapter and reporting services is the first thing most developers do when introducing Serenity/JS to an existing code base.")),(0,n.kt)("p",null,"Out of the box, Serenity/JS offers test runner adapters for the following test runners:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/cucumber"},"Cucumber")," - Serenity/JS supports ",(0,n.kt)("strong",{parentName:"li"},"all latest major versions")," of Cucumber.js"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/jasmine"},"Jasmine")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/mocha"},"Mocha")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/playwright-test"},"Playwright Test")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/protractor"},"Protractor")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/webdriverio"},"WebdriverIO"))),(0,n.kt)("h2",{id:"serenityjs-reporting-services"},"Serenity/JS Reporting Services"),(0,n.kt)("p",null,"Just like the ",(0,n.kt)("a",{parentName:"p",href:"/handbook/design/"},"core design patterns")," in your Serenity/JS scenarios revolve around the ",(0,n.kt)("a",{parentName:"p",href:"http://www.extremeprogramming.org/rules/metaphor.html"},"system metaphor"),"\nof a ",(0,n.kt)("a",{parentName:"p",href:"/handbook/design/screenplay-pattern"},"stage performance"),", Serenity/JS reporting services follow the metaphor of a ",(0,n.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Running_crew"},(0,n.kt)("em",{parentName:"a"},"stage crew")),"."),(0,n.kt)("admonition",{title:"What if I don't follow the Screenplay Pattern yet?",type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"Serenity/JS Reporting Services rely on ",(0,n.kt)("a",{parentName:"p",href:"/handbook/reporting/domain-events"},"domain events")," emitted by ",(0,n.kt)("a",{parentName:"p",href:"/api/core/class/Actor"},"actors")," ",(0,n.kt)("em",{parentName:"p"},(0,n.kt)("strong",{parentName:"em"},"and"))," Test Runner Adapters.\nIf your test scenarios don't follow the Screenplay Pattern and have no actors yet, don't worry! Serenity/JS reports will present information gathered by the adapter\nand will start to include information provided by actors whenever you're ready to introduce them.")),(0,n.kt)("p",null,"The ",(0,n.kt)("a",{parentName:"p",href:"/api/core/interface/StageCrewMember"},(0,n.kt)("inlineCode",{parentName:"a"},"StageCrewMembers"))," observe the ",(0,n.kt)("a",{parentName:"p",href:"/api/core/class/Actor"},"actors")," on ",(0,n.kt)("a",{parentName:"p",href:"/api/core/class/Stage"},(0,n.kt)("inlineCode",{parentName:"a"},"Stage")),",\nwatch the ",(0,n.kt)("a",{parentName:"p",href:"/api/core/class/Activity"},(0,n.kt)("inlineCode",{parentName:"a"},"Activities"))," they perform, and listen to the ",(0,n.kt)("a",{parentName:"p",href:"/handbook/reporting/domain-events"},"domain events")," emitted by their environment.\nThey use the information they gather to ",(0,n.kt)("a",{parentName:"p",href:"/api/core-events/class/ArtifactGenerated"},"generate artifacts"),", such as test reports,\nproduce more events to prompt other crew members to action, or perform side effects like printing to the terminal, writing files to disk, or performing network or database calls."),(0,n.kt)("p",null,"Several of the Serenity/JS modules provide ",(0,n.kt)("a",{parentName:"p",href:"/api/core/interface/StageCrewMember"},(0,n.kt)("inlineCode",{parentName:"a"},"StageCrewMembers"))," you can use for test reporting purposes:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/handbook/reporting/console-reporter"},"Console Reporter")," - writes text-based test reports to your computer terminal,"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/handbook/reporting/serenity-bdd-reporter"},"Serenity BDD Reporter")," - emits ",(0,n.kt)("a",{parentName:"li",href:"https://serenity-bdd.github.io/"},"Serenity BDD"),"-compatible JSON reports, to be archived via ",(0,n.kt)("a",{parentName:"li",href:"/handbook/reporting/artifact-archiver"},(0,n.kt)("inlineCode",{parentName:"a"},"ArtifactArchiver"))," and consumed by the ",(0,n.kt)("a",{parentName:"li",href:"/api/serenity-bdd/#serenity-bdd-living-documentation"},"Serenity BDD CLI")," to produce HTML reports and living documentation,"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/handbook/reporting/photographer"},"Photographer")," - automatically captures screenshots of the web browser window used by the active actor, to be archived via ",(0,n.kt)("a",{parentName:"li",href:"/handbook/reporting/artifact-archiver"},(0,n.kt)("inlineCode",{parentName:"a"},"ArtifactArchiver"))," and attached to ",(0,n.kt)("a",{parentName:"li",href:"/handbook/reporting/serenity-bdd-reporter"},"Serenity BDD reports")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/handbook/reporting/artifact-archiver"},"Artifact Archiver")," - stores report artifacts on disk,"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/handbook/reporting/stream-reporter"},"Stream Reporter")," - logs any events it receives to help you with debugging.")),(0,n.kt)("admonition",{title:"Creating custom reporting services",type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"Studying existing Serenity/JS reporting services will help you create your own ",(0,n.kt)("a",{parentName:"p",href:"/api/core/interface/StageCrewMember"},(0,n.kt)("inlineCode",{parentName:"a"},"StageCrewMembers"))," that produce custom reports or send the results to external reporting or storage systems.")),(0,n.kt)("h2",{id:"serenityjs-screenplay-pattern-apis"},"Serenity/JS Screenplay Pattern APIs"),(0,n.kt)("p",null,"Most Serenity/JS modules offer low-level ",(0,n.kt)("a",{parentName:"p",href:"/handbook/design/screenplay-pattern"},"Screenplay Pattern")," APIs:\n",(0,n.kt)("a",{parentName:"p",href:"/api/core/class/Ability"},"Abilities"),", ",(0,n.kt)("a",{parentName:"p",href:"/api/core/class/Question"},"Questions")," and ",(0,n.kt)("a",{parentName:"p",href:"/api/core/class/Activity"},"Activities"),",\ndedicated to helping you integrate your test scenarios with the interfaces of your system under test and create elegant, business-focused test ",(0,n.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Domain-specific_language"},"DSLs"),"."),(0,n.kt)("p",null,"Out of the box, Serenity/JS enables integration with ",(0,n.kt)("a",{parentName:"p",href:"/handbook/web-testing/"},"web-"),", ",(0,n.kt)("a",{parentName:"p",href:"/handbook/mobile-testing/"},"mobile-"),", and ",(0,n.kt)("a",{parentName:"p",href:"/handbook/api-testing/"},"HTTP API-based"),"\ninterfaces and provides wrappers around battle-tested integration libraries to take care of the low-level interactions with your system."),(0,n.kt)("p",null,"In particular:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/web"},(0,n.kt)("strong",{parentName:"a"},"Serenity/JS Web module"))," provides the universal web testing fa\xe7ade - a set of integration library-agnostic Screenplay Pattern APIs dedicated to web UI testing"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/playwright"},(0,n.kt)("strong",{parentName:"a"},"Serenity/JS Playwright module"))," provides wrappers around ",(0,n.kt)("a",{parentName:"li",href:"https://playwright.dev/"},"Microsoft Playwright"),", to be used with the Serenity/JS Web module"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/protractor"},(0,n.kt)("strong",{parentName:"a"},"Serenity/JS Protractor module"))," provides wrappers around ",(0,n.kt)("a",{parentName:"li",href:"https://www.protractortest.org/#/"},"Angular Protractor"),", to be used with the Serenity/JS Web module"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/webdriverio"},(0,n.kt)("strong",{parentName:"a"},"Serenity/JS WebdriverIO module"))," provides wrappers around ",(0,n.kt)("a",{parentName:"li",href:"https://webdriver.io/"},"WebdriverIO"),", to be used with the Serenity/JS Web module"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/rest"},(0,n.kt)("strong",{parentName:"a"},"Serenity/JS REST module"))," provides Screenplay Pattern APIs dedicated to HTTP and REST API testing, as well as wrappers around ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/axios/axios"},"Axios")," HTTP client"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/local-server"},(0,n.kt)("strong",{parentName:"a"},"Serenity/JS Local Server"))," provides Screenplay Pattern APIs dedicated to interacting with local HTTP servers, as well as wrappers supporting servers built with ",(0,n.kt)("a",{parentName:"li",href:"https://expressjs.com/"},"Express"),",\n",(0,n.kt)("a",{parentName:"li",href:"https://hapijs.com/"},"Hapi"),", ",(0,n.kt)("a",{parentName:"li",href:"https://koajs.com/"},"Koa"),", ",(0,n.kt)("a",{parentName:"li",href:"http://restify.com/"},"Restify"),", and raw ",(0,n.kt)("a",{parentName:"li",href:"https://nodejs.org/en/docs/guides/anatomy-of-an-http-transaction/"},"Node.js"),".")),(0,n.kt)("p",null,"Apart from the integration modules, the framework also offers ",(0,n.kt)("a",{parentName:"p",href:"/api/assertions"},(0,n.kt)("strong",{parentName:"a"},"Serenity/JS Assertions"))," - a dedicated and interface-agnostic assertions library based on the Screenplay Pattern."),(0,n.kt)("h2",{id:"what-serenityjs-modules-do-i-need"},"What Serenity/JS modules do I need?"),(0,n.kt)("p",null,"What Serenity/JS modules you need depends on the ",(0,n.kt)("strong",{parentName:"p"},"type of tests")," you want to write and the ",(0,n.kt)("strong",{parentName:"p"},"lower-level integration libraries"),"\nyou want to use."),(0,n.kt)("p",null,"For example, if you wanted to create a test suite that exercised a ",(0,n.kt)("strong",{parentName:"p"},"REST API")," and didn't need to touch the UI, you'd use:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/core"},(0,n.kt)("inlineCode",{parentName:"a"},"@serenity-js/core"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/assertions"},(0,n.kt)("inlineCode",{parentName:"a"},"@serenity-js/assertions"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/rest"},(0,n.kt)("inlineCode",{parentName:"a"},"@serenity-js/rest"))),(0,n.kt)("li",{parentName:"ul"},"plus a ",(0,n.kt)("a",{parentName:"li",href:"/handbook/test-runners/"},"test runner adapter")," and a ",(0,n.kt)("a",{parentName:"li",href:"/handbook/reporting/"},"reporting module"))),(0,n.kt)("p",null,"If you wanted to create a test suite that exercised a ",(0,n.kt)("strong",{parentName:"p"},"web interface"),", you'd need:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/core"},(0,n.kt)("inlineCode",{parentName:"a"},"@serenity-js/core"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/assertions"},(0,n.kt)("inlineCode",{parentName:"a"},"@serenity-js/assertions"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/web"},(0,n.kt)("inlineCode",{parentName:"a"},"@serenity-js/web")),", plus a module providing wrappers for your integration library of choice, so ",(0,n.kt)("a",{parentName:"li",href:"/api/playwright"},(0,n.kt)("inlineCode",{parentName:"a"},"@serenity-js/playwright")),", ",(0,n.kt)("a",{parentName:"li",href:"/api/protractor"},(0,n.kt)("inlineCode",{parentName:"a"},"@serenity-js/protractor")),", or ",(0,n.kt)("a",{parentName:"li",href:"/api/webdriverio"},(0,n.kt)("inlineCode",{parentName:"a"},"@serenity-js/webdriverio"))),(0,n.kt)("li",{parentName:"ul"},"you'd also want a ",(0,n.kt)("a",{parentName:"li",href:"/handbook/test-runners/"},"test runner adapter")," and a ",(0,n.kt)("a",{parentName:"li",href:"/handbook/reporting/"},"reporting module"))),(0,n.kt)("admonition",{title:"Short on time? \u23f1\ufe0f",type:"info"},(0,n.kt)("p",{parentName:"admonition"},(0,n.kt)("strong",{parentName:"p"},"Serenity/JS Project Templates")," and ",(0,n.kt)("strong",{parentName:"p"},"Serenity/JS GitPods")," come with all the appropriate Serenity/JS modules\nand lower-level integration and test tools already configured, so you can start automating your tests straight away!"),(0,n.kt)("p",{parentName:"admonition"},"Learn more about faster ways to get started using ",(0,n.kt)("a",{parentName:"p",href:"/handbook/getting-started/project-templates/"},"Serenity/JS Project Templates"),".")),(0,n.kt)("h2",{id:"integration-architecture-summary"},"Integration architecture summary"),(0,n.kt)("p",null,"At the high level:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/handbook/test-runners/"},(0,n.kt)("strong",{parentName:"a"},"Serenity/JS Test Runner Adapter"))," attaches to your test runner and enables test reporting"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/handbook/design/screenplay-pattern/"},(0,n.kt)("strong",{parentName:"a"},"Serenity/JS Screenplay Pattern"))," libraries provide an abstraction that enables your test scenarios to interact with the system under test,\nwhile being agnostic of the underlying integration tool"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/handbook/reporting/"},(0,n.kt)("strong",{parentName:"a"},"Serenity/JS Reporting Services"))," combine the information provided by your test runner and any custom test automation code\nto produce test execution reports and living documentation in various formats")),(0,n.kt)("figure",null,(0,n.kt)("mermaid",{value:'flowchart TB\n    Developer["\ud83d\udcbb You"]\n    TestCode["Your Test Code"]\n    IntegrationLibraries["Low-Level Integration Libraries"]\n    SUT["Your System-Under-Test"]\n    TestReports["Test Execution Reports"]\n    Stage\n\n    subgraph TestRunner["Test Runner"]\n    direction TB\n    TestRunnerAdapter["Serenity/JS Test Runner Adapter"]\n    end\n\n    subgraph TestCode["Your Test Code"]\n    direction TB\n    TestScenarios["Your Test Scenarios"]\n    TestDSL["Your Custom Screenplay Pattern APIs"]\n    end\n\n    subgraph SerenityModules["Serenity/JS Modules"]\n    direction TB\n    ScreenplayPatternAPIs["Serenity/JS Screenplay Pattern APIs"]\n    end\n\n    subgraph ReportingServices["Serenity/JS Reporting Services"]\n    direction TB\n    StageCrewMember["StageCrewMember"]\n    end\n\n    Developer -- invoke --\x3e TestRunner\n\n    TestScenarios -- use --\x3e TestDSL\n    TestDSL -- use --\x3e SerenityModules\n    TestRunner -- executes --\x3e TestCode\n    TestRunnerAdapter --\x3e |emits DomainEvents| Stage\n    ScreenplayPatternAPIs --\x3e |emit DomainEvents| Stage\n    ScreenplayPatternAPIs --\x3e |wrap| IntegrationLibraries\n    IntegrationLibraries --\x3e |interact with| SUT\n    Stage --\x3e |forwards DomainEvents| ReportingServices\n    ReportingServices --\x3e |produce| TestReports'}),(0,n.kt)("figcaption",null,"Serenity/JS integration architecture diagram")))}u.isMDXComponent=!0}}]);